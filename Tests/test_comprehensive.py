from src import density_matrix as DM
from src.ket import canonical_basis
from src import measurements

from src.simulation import run

from numpy.testing import assert_almost_equal


class TestComprehensive:

    def test_pipeline(self):
        """Test the entire pipeline for a specific case studdied by other codes"""

        dtheta = .1

        # Properties of the system
        number_of_qbits = 8

        # initial conditions
        pops = [.1, .2, .3, .4, .15, .25, .35, .45]

        # generate the system and change to the energy basis
        sys = DM.n_thermal_qbits(pops)
        sys.change_to_energy_basis()

        # how the system will be broken up
        chunks = 2

        assert number_of_qbits // chunks == number_of_qbits / chunks
        block_size = number_of_qbits // chunks

        hamiltonian_data = [
            [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
            [0., 0., 0. + 0.348038 * 1j, 0., 0. + 0.712188 * 1j, 0., 0., 0.,
             0. + 0.0630846 * 1j, 0., 0., 0., 0., 0., 0., 0.],
            [0., 0. - 0.348038 * 1j, 0., 0., 0. + 0.54485 * 1j, 0., 0., 0.,
             0. + 0.701214 * 1j, 0., 0., 0., 0., 0., 0., 0.],
            [0., 0., 0., 0., 0., 0. + 0.600531 * 1j, 0. + 0.38047 * 1j, 0., 0.,
             0. + 0.144549 * 1j, 0. + 0.523845 * 1j, 0., 0. + 0.612048 * 1j, 0., 0., 0.],
            [0., 0. - 0.712188 * 1j, 0. - 0.54485 * 1j, 0., 0., 0., 0., 0.,
             0. + 0.859366 * 1j, 0., 0., 0., 0., 0., 0., 0.],
            [0., 0., 0., 0. - 0.600531 * 1j, 0., 0., 0. + 0.164987 * 1j, 0., 0.,
             0. + 0.503032 * 1j, 0. + 0.23019 * 1j, 0., 0. + 0.69228 * 1j, 0., 0., 0.],
            [0., 0., 0., 0. - 0.38047 * 1j, 0., 0. - 0.164987 * 1j, 0., 0., 0.,
             0. + 0.322315 * 1j, 0. + 0.401876 * 1j, 0., 0. + 0.820554 * 1j, 0., 0., 0.],
            [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0. + 0.584901 * 1j, 0.,
             0. + 0.199695 * 1j, 0. + 0.947387 * 1j, 0.],
            [0., 0. - 0.0630846 * 1j, 0. - 0.701214 * 1j, 0., 0. - 0.859366 * 1j, 0., 0.,
             0., 0., 0., 0., 0., 0., 0., 0., 0.],
            [0., 0., 0., 0. - 0.144549 * 1j, 0., 0. - 0.503032 * 1j, 0. - 0.322315 * 1j,
             0., 0., 0., 0. + 0.347468 * 1j, 0., 0. + 0.909734 * 1j, 0., 0., 0.],
            [0., 0., 0., 0. - 0.523845 * 1j, 0., 0. - 0.23019 * 1j, 0. - 0.401876 * 1j,
             0., 0., 0. - 0.347468 * 1j, 0., 0., 0. + 0.400651 * 1j, 0., 0., 0.],
            [0., 0., 0., 0., 0., 0., 0., 0. - 0.584901 * 1j, 0., 0., 0., 0., 0.,
             0. + 0.0237917 * 1j, 0. + 0.932369 * 1j, 0.],
            [0., 0., 0., 0. - 0.612048 * 1j, 0., 0. - 0.69228 * 1j, 0. - 0.820554 * 1j,
             0., 0., 0. - 0.909734 * 1j, 0. - 0.400651 * 1j, 0., 0., 0., 0., 0.],
            [0., 0., 0., 0., 0., 0., 0., 0. - 0.199695 * 1j, 0., 0., 0.,
             0. - 0.0237917 * 1j, 0., 0., 0. + 0.109429 * 1j, 0.],
            [0., 0., 0., 0., 0., 0., 0., 0. - 0.947387 * 1j, 0., 0., 0.,
             0. - 0.932369 * 1j, 0., 0. - 0.109429 * 1j, 0., 0.],
            [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]
        ]

        H = DM.DensityMatrix(DM.SPARSE_TYPE(hamiltonian_data), canonical_basis(block_size))
        H.change_to_energy_basis()

        Unitary = DM.tensor([DM.dm_exp(1j * dtheta * H) for _ in range(chunks)])

        orders = [[0, 1, 2, 3, 4, 5, 6, 7], [0, 4, 1, 5, 2, 6, 3, 7]]

        pops = run(sys, measurement_set=[measurements.pops], num_iterations=100, num_chunks=2, orders=orders, Unitaries=Unitary)[0][1:]

        UnnatiResults = [[0.102022, 0.200982, 0.298861, 0.398135, 0.152104, 0.251058, 0.348878, 0.447961], [0.105157, 0.204515, 0.296364, 0.395547, 0.153089, 0.252141, 0.347254, 0.445933],
                         [0.112636, 0.208809, 0.291704, 0.388434, 0.159891, 0.255837, 0.343439, 0.43925], [0.120093, 0.217169, 0.286156, 0.382944, 0.162301, 0.258347, 0.339119, 0.43387],
                         [0.132393, 0.223856, 0.278698, 0.371414, 0.173253, 0.264123, 0.333052, 0.423211], [0.142816, 0.235635, 0.271318, 0.364193, 0.176949, 0.26789, 0.326314, 0.414886],
                         [0.158532, 0.243409, 0.262328, 0.349692, 0.190979, 0.274857, 0.31877, 0.401433], [0.170145, 0.256731, 0.2546, 0.342043, 0.195623, 0.27957, 0.310242, 0.391047],
                         [0.187452, 0.264179, 0.245591, 0.326297, 0.211322, 0.28665, 0.302226, 0.376284], [0.198462, 0.27715, 0.238926, 0.319365, 0.216408, 0.291883, 0.292794, 0.36501],
                         [0.215541, 0.283056, 0.231301, 0.304005, 0.232273, 0.297995, 0.285379, 0.350449], [0.224522, 0.294182, 0.226742, 0.298572, 0.237196, 0.303256, 0.276035, 0.339495],
                         [0.239907, 0.297762, 0.221513, 0.284836, 0.251866, 0.307503, 0.270193, 0.326421], [0.246065, 0.306217, 0.21956, 0.281235, 0.256003, 0.312292, 0.261851, 0.316778],
                         [0.258826, 0.307216, 0.217211, 0.269823, 0.268436, 0.314108, 0.258308, 0.306072], [0.262062, 0.312903, 0.217816, 0.267983, 0.271242, 0.317978, 0.251661, 0.298355],
                         [0.271814, 0.311558, 0.218322, 0.259071, 0.280807, 0.317202, 0.250804, 0.290422], [0.272613, 0.314963, 0.221007, 0.258648, 0.281891, 0.319824, 0.246236, 0.284818],
                         [0.279411, 0.31185, 0.223954, 0.252015, 0.28837, 0.316693, 0.248089, 0.279617], [0.278605, 0.313785, 0.227999, 0.252551, 0.28755, 0.3179, 0.245671, 0.27594],
                         [0.282798, 0.309636, 0.232751, 0.247755, 0.291078, 0.312968, 0.249924, 0.27309], [0.281292, 0.310954, 0.237385, 0.248818, 0.288409, 0.312766, 0.249466, 0.270911],
                         [0.283365, 0.30648, 0.243235, 0.245369, 0.289381, 0.306782, 0.255557, 0.269833], [0.281918, 0.307857, 0.247783, 0.246649, 0.285147, 0.305336, 0.25669, 0.268621],
                         [0.28236, 0.303615, 0.254086, 0.244145, 0.284119, 0.299089, 0.263896, 0.26869], [0.281447, 0.30543, 0.258054, 0.245497, 0.278801, 0.296664, 0.266159, 0.267949],
                         [0.28067, 0.301752, 0.264301, 0.243703, 0.276407, 0.290846, 0.273701, 0.26862], [0.280451, 0.304075, 0.267405, 0.245126, 0.270617, 0.287744, 0.276606, 0.267976],
                         [0.27876, 0.301046, 0.273265, 0.243987, 0.267504, 0.28284, 0.283737, 0.268861], [0.279135, 0.303713, 0.275418, 0.245568, 0.2619, 0.279339, 0.286814, 0.268114],
                         [0.276756, 0.301198, 0.280728, 0.245152, 0.258683, 0.275578, 0.2929, 0.269006], [0.277463, 0.303928, 0.281994, 0.24699, 0.253879, 0.271893, 0.295731, 0.268122],
                         [0.274598, 0.301657, 0.286726, 0.247392, 0.251097, 0.269259, 0.300302, 0.268967], [0.27532, 0.304168, 0.28726, 0.249526, 0.247591, 0.265542, 0.302552, 0.26804],
                         [0.272199, 0.301835, 0.291458, 0.250783, 0.245675, 0.263841, 0.305332, 0.268877], [0.272656, 0.303922, 0.291434, 0.25316, 0.243795, 0.260195, 0.30678, 0.26806],
                         [0.269549, 0.301275, 0.295151, 0.255196, 0.243035, 0.259156, 0.307692, 0.268947], [0.269564, 0.302833, 0.294702, 0.257677, 0.242918, 0.255674, 0.308243, 0.26839],
                         [0.266765, 0.299739, 0.29796, 0.260312, 0.243441, 0.25505, 0.30739, 0.269343], [0.2663, 0.300737, 0.297144, 0.262717, 0.245038, 0.251844, 0.307074, 0.269145],
                         [0.264079, 0.297188, 0.299918, 0.265713, 0.246802, 0.251491, 0.304696, 0.270113], [0.263235, 0.297622, 0.298716, 0.267873, 0.249897, 0.248713, 0.303646, 0.270296],
                         [0.261782, 0.293718, 0.30095, 0.270996, 0.252696, 0.248622, 0.300074, 0.271161], [0.260769, 0.293581, 0.299297, 0.272787, 0.256948, 0.246452, 0.298489, 0.271678],
                         [0.260166, 0.289482, 0.300931, 0.275855, 0.260447, 0.246731, 0.294099, 0.272289], [0.259242, 0.288765, 0.298757, 0.27721, 0.265434, 0.245341, 0.29221, 0.273041],
                         [0.259458, 0.284657, 0.299753, 0.280106, 0.269224, 0.24616, 0.287382, 0.27326], [0.258869, 0.28338, 0.297014, 0.281004, 0.274511, 0.245673, 0.285424, 0.274125],
                         [0.259788, 0.279446, 0.297371, 0.283662, 0.278181, 0.247193, 0.280507, 0.273853], [0.259717, 0.277701, 0.294063, 0.284096, 0.283371, 0.247638, 0.278696, 0.274718],
                         [0.261176, 0.274109, 0.293823, 0.28647, 0.286577, 0.249941, 0.273983, 0.273922], [0.261708, 0.27208, 0.289993, 0.286418, 0.291361, 0.251239, 0.272495, 0.274705],
                         [0.263529, 0.268978, 0.289243, 0.28845, 0.293879, 0.254293, 0.268211, 0.273417], [0.264643, 0.26693, 0.284997, 0.287859, 0.298055, 0.256266, 0.267167, 0.274084],
                         [0.266659, 0.264439, 0.283871, 0.289459, 0.299797, 0.259917, 0.263464, 0.272394], [0.268226, 0.26268, 0.279375, 0.288245, 0.303265, 0.262327, 0.262925, 0.272957],
                         [0.270292, 0.260891, 0.278049, 0.289294, 0.304261, 0.266321, 0.259895, 0.270996], [0.272095, 0.259704, 0.273531, 0.28737, 0.307005, 0.268921, 0.259868, 0.271507],
                         [0.274082, 0.258675, 0.272198, 0.287744, 0.307354, 0.272948, 0.257564, 0.269434], [0.275843, 0.258256, 0.267925, 0.285066, 0.30941, 0.275524, 0.258021, 0.269955],
                         [0.27763, 0.258005, 0.266776, 0.28468, 0.309225, 0.279266, 0.256473, 0.267946], [0.279049, 0.258402, 0.263027, 0.281301, 0.310657, 0.281664, 0.257371, 0.268529],
                         [0.280494, 0.25889, 0.262222, 0.280173, 0.310016, 0.284833, 0.256605, 0.266767], [0.281298, 0.25998, 0.259252, 0.276283, 0.310898, 0.286954, 0.25789, 0.267446],
                         [0.282221, 0.261091, 0.258921, 0.27458, 0.309823, 0.289323, 0.257925, 0.266116], [0.28221, 0.262583, 0.256926, 0.270513, 0.31022, 0.291107, 0.259533, 0.266907],
                         [0.282409, 0.264112, 0.257156, 0.268556, 0.308692, 0.292523, 0.260374, 0.266179], [0.281495, 0.265603, 0.256258, 0.264745, 0.308655, 0.293928, 0.262222, 0.267094],
                         [0.280789, 0.267268, 0.257085, 0.262958, 0.306638, 0.294326, 0.263837, 0.267099], [0.279021, 0.268343, 0.257315, 0.259848, 0.306196, 0.295307, 0.265816, 0.268153],
                         [0.277333, 0.269834, 0.258711, 0.258649, 0.303677, 0.294722, 0.268121, 0.268953], [0.2749, 0.27018, 0.260006, 0.25659, 0.302836, 0.295234, 0.270101, 0.270153],
                         [0.27231, 0.271228, 0.261862, 0.256275, 0.299844, 0.293804, 0.272956, 0.271721], [0.269521, 0.270736, 0.264061, 0.255446, 0.298596, 0.293809, 0.274794, 0.273037],
                         [0.266281, 0.271183, 0.26619, 0.256109, 0.295202, 0.291766, 0.278008, 0.275261], [0.263522, 0.269989, 0.269042, 0.256482, 0.293554, 0.291242, 0.279564, 0.276606],
                         [0.260019, 0.269816, 0.271199, 0.258, 0.289862, 0.28888, 0.282915, 0.279309], [0.257698, 0.268263, 0.274376, 0.259374, 0.287862, 0.287833, 0.284059, 0.280536],
                         [0.254377, 0.267581, 0.276297, 0.261456, 0.283999, 0.28546, 0.287313, 0.283518], [0.252861, 0.266115, 0.279435, 0.263521, 0.281757, 0.283937, 0.287933, 0.284441],
                         [0.250144, 0.265111, 0.280885, 0.26579, 0.27787, 0.281827, 0.290858, 0.287513], [0.249687, 0.264155, 0.283637, 0.268203, 0.275565, 0.279926, 0.29087, 0.287958],
                         [0.247894, 0.263038, 0.28446, 0.270289, 0.271825, 0.278276, 0.293257, 0.29096], [0.248576, 0.262878, 0.286554, 0.272735, 0.269688, 0.276149, 0.292617, 0.290802],
                         [0.247867, 0.261832, 0.286696, 0.274349, 0.266283, 0.275067, 0.294295, 0.293611], [0.249562, 0.262559, 0.287978, 0.276581, 0.264575, 0.272916, 0.293025, 0.292802],
                         [0.249905, 0.261721, 0.287496, 0.277559, 0.261695, 0.27242, 0.293883, 0.295321], [0.252292, 0.263237, 0.287937, 0.279426, 0.260666, 0.270474, 0.292084, 0.293885],
                         [0.25347, 0.262691, 0.286979, 0.279751, 0.258478, 0.270508, 0.292084, 0.296039], [0.256106, 0.264764, 0.286649, 0.281193, 0.258329, 0.268983, 0.289927, 0.294048],
                         [0.257773, 0.264532, 0.285423, 0.280985, 0.256951, 0.269439, 0.289117, 0.295781], [0.260213, 0.266884, 0.284448, 0.282028, 0.257794, 0.268493, 0.286809, 0.293331],
                         [0.261988, 0.266924, 0.283171, 0.28149, 0.257277, 0.269222, 0.285316, 0.294613], [0.263908, 0.269314, 0.281696, 0.282212, 0.259106, 0.268919, 0.283042, 0.291804],
                         [0.265491, 0.269523, 0.280555, 0.28156, 0.259419, 0.269748, 0.281059, 0.292645], [0.266779, 0.271809, 0.278714, 0.282048, 0.262094, 0.27004, 0.278937, 0.289578],
                         [0.268044, 0.272048, 0.277827, 0.281431, 0.263129, 0.270788, 0.276704, 0.290028], [0.268819, 0.274208, 0.275737, 0.281742, 0.266384, 0.271532, 0.274764, 0.286814],
                         [0.26985, 0.274336, 0.275133, 0.281187, 0.267959, 0.272033, 0.272539, 0.286963], [0.270411, 0.276441, 0.272893, 0.28132, 0.271435, 0.273029, 0.270742, 0.283729]]

        assert_almost_equal(UnnatiResults, pops, 5)
