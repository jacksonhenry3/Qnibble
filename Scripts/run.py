from src.random_hamiltonian import random_hamiltonian
from src import density_matrix as DM
from src.ket import energy_basis, canonical_basis
from src import measurements
import matplotlib.pyplot as plt
import numpy as np
from src.step import step

dtheta = .1

# Properties of the system
number_of_qbits = 8

# initial conditions
pops = [.1, .2, .3, .4, .15, .25, .35, .45]

# generate the system and change to the energy basis
sys = DM.n_thermal_qbits(pops)
sys.change_to_energy_basis()

# how the system will be broken up
chunks = 2
assert number_of_qbits // chunks == number_of_qbits / chunks
block_size = number_of_qbits // chunks

import numpy as np

hamiltonian_data = [
    [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
    [0., 0., 0. + 0.348038 * 1j, 0., 0. + 0.712188 * 1j, 0., 0., 0.,
     0. + 0.0630846 * 1j, 0., 0., 0., 0., 0., 0., 0.],
    [0., 0. - 0.348038 * 1j, 0., 0., 0. + 0.54485 * 1j, 0., 0., 0.,
     0. + 0.701214 * 1j, 0., 0., 0., 0., 0., 0., 0.],
    [0., 0., 0., 0., 0., 0. + 0.600531 * 1j, 0. + 0.38047 * 1j, 0., 0.,
     0. + 0.144549 * 1j, 0. + 0.523845 * 1j, 0., 0. + 0.612048 * 1j, 0., 0., 0.],
    [0., 0. - 0.712188 * 1j, 0. - 0.54485 * 1j, 0., 0., 0., 0., 0.,
     0. + 0.859366 * 1j, 0., 0., 0., 0., 0., 0., 0.],
    [0., 0., 0., 0. - 0.600531 * 1j, 0., 0., 0. + 0.164987 * 1j, 0., 0.,
     0. + 0.503032 * 1j, 0. + 0.23019 * 1j, 0., 0. + 0.69228 * 1j, 0., 0., 0.],
    [0., 0., 0., 0. - 0.38047 * 1j, 0., 0. - 0.164987 * 1j, 0., 0., 0.,
     0. + 0.322315 * 1j, 0. + 0.401876 * 1j, 0., 0. + 0.820554 * 1j, 0., 0., 0.],
    [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0. + 0.584901 * 1j, 0.,
     0. + 0.199695 * 1j, 0. + 0.947387 * 1j, 0.],
    [0., 0. - 0.0630846 * 1j, 0. - 0.701214 * 1j, 0., 0. - 0.859366 * 1j, 0., 0.,
     0., 0., 0., 0., 0., 0., 0., 0., 0.],
    [0., 0., 0., 0. - 0.144549 * 1j, 0., 0. - 0.503032 * 1j, 0. - 0.322315 * 1j,
     0., 0., 0., 0. + 0.347468 * 1j, 0., 0. + 0.909734 * 1j, 0., 0., 0.],
    [0., 0., 0., 0. - 0.523845 * 1j, 0., 0. - 0.23019 * 1j, 0. - 0.401876 * 1j,
     0., 0., 0. - 0.347468 * 1j, 0., 0., 0. + 0.400651 * 1j, 0., 0., 0.],
    [0., 0., 0., 0., 0., 0., 0., 0. - 0.584901 * 1j, 0., 0., 0., 0., 0.,
     0. + 0.0237917 * 1j, 0. + 0.932369 * 1j, 0.],
    [0., 0., 0., 0. - 0.612048 * 1j, 0., 0. - 0.69228 * 1j, 0. - 0.820554 * 1j,
     0., 0., 0. - 0.909734 * 1j, 0. - 0.400651 * 1j, 0., 0., 0., 0., 0.],
    [0., 0., 0., 0., 0., 0., 0., 0. - 0.199695 * 1j, 0., 0., 0.,
     0. - 0.0237917 * 1j, 0., 0., 0. + 0.109429 * 1j, 0.],
    [0., 0., 0., 0., 0., 0., 0., 0. - 0.947387 * 1j, 0., 0., 0.,
     0. - 0.932369 * 1j, 0., 0. - 0.109429 * 1j, 0., 0.],
    [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]
]

H = DM.DensityMatrix(DM.SPARSE_TYPE(hamiltonian_data), canonical_basis(block_size))
H.change_to_energy_basis()
pops = []
# pops.append(measurements.pops(sys))

groups = [[0, 2, 4, 6], [1, 3, 5, 7]]
# groups = [[0, 4, 1, 5], [2, 6, 3, 7]]

"""
[0.10708073418273571, 0.19291926581726435, 0.2929192658172644, 0.4070807341827356, 0.15000000000000002, 0.25000000000000006, 0.3499999999999999, 0.45000000000000007]
"""

step_sizes = [dtheta for _ in range(chunks)]
hamiltonians = [H for _ in range(chunks)]
Unitaries = []
correlation = []
for _ in range(100):
    print(_)
    sys = step(sys, groups, hamiltonians, step_sizes)
    pops.append(measurements.pops(sys))

# print(pops)
# plt.imshow(np.transpose(pops))
# plt.plot(np.array(UnnatiData), '.')

UnnatiResults = [[0.101761, 0.201841, 0.298805, 0.398989, 0.150457, 0.250416, 0.348977, 0.448753], [0.106774, 0.207095, 0.295353, 0.39611, 0.151977, 0.251793, 0.345895, 0.445001],
                 [0.114473, 0.215167, 0.289922, 0.391643, 0.154781, 0.254329, 0.340824, 0.438861], [0.124123, 0.225268, 0.28287, 0.385909, 0.159063, 0.258211, 0.333945, 0.430612],
                 [0.134905, 0.236504, 0.274601, 0.379241, 0.164965, 0.263589, 0.325529, 0.420667], [0.146007, 0.247981, 0.265539, 0.371953, 0.172545, 0.270542, 0.315909, 0.409523],
                 [0.15671, 0.258905, 0.256093, 0.364327, 0.18176, 0.279055, 0.305437, 0.397713], [0.166461, 0.268663, 0.246636, 0.356592, 0.192448, 0.289001, 0.294454, 0.385745],
                 [0.174927, 0.276888, 0.237488, 0.348926, 0.204327, 0.300131, 0.283258, 0.374056], [0.182014, 0.283484, 0.228903, 0.341455, 0.217004, 0.312082, 0.27208, 0.362978],
                 [0.18786, 0.288617, 0.221065, 0.334265, 0.229993, 0.324397, 0.261082, 0.352721], [0.192799, 0.292677, 0.214089, 0.327403, 0.242755, 0.336548, 0.250358, 0.343371],
                 [0.197297, 0.296202, 0.208022, 0.320898, 0.254728, 0.347985, 0.239954, 0.334915], [0.201875, 0.299794, 0.202852, 0.314762, 0.265378, 0.358173, 0.229896, 0.327271],
                 [0.207028, 0.304027, 0.198516, 0.309003, 0.27424, 0.36664, 0.220216, 0.32033], [0.213151, 0.30936, 0.19491, 0.303623, 0.280954, 0.373016, 0.210985, 0.314001],
                 [0.220473, 0.316066, 0.191901, 0.298624, 0.285292, 0.377063, 0.202334, 0.308247], [0.229028, 0.324193, 0.189334, 0.294006, 0.287179, 0.378694, 0.194459, 0.303106],
                 [0.238638, 0.333557, 0.187051, 0.289763, 0.286688, 0.377972, 0.187624, 0.298708], [0.248933, 0.343758, 0.184898, 0.285885, 0.284028, 0.375099, 0.18214, 0.295258],
                 [0.259398, 0.354237, 0.182745, 0.282358, 0.279522, 0.370392, 0.178335, 0.293013], [0.269425, 0.364339, 0.180492, 0.27917, 0.273568, 0.364245, 0.176515, 0.292246],
                 [0.278393, 0.3734, 0.178087, 0.276312, 0.266596, 0.357088, 0.176923, 0.2932], [0.285732, 0.380823, 0.175536, 0.273794, 0.259034, 0.349342, 0.179698, 0.296041],
                 [0.290983, 0.386145, 0.172908, 0.271644, 0.251264, 0.341388, 0.184845, 0.300824], [0.293848, 0.389085, 0.170338, 0.269922, 0.243593, 0.333528, 0.192221, 0.307464],
                 [0.294209, 0.389565, 0.16802, 0.268721, 0.236238, 0.325978, 0.201534, 0.315736], [0.292127, 0.387703, 0.166201, 0.268164, 0.229315, 0.318853, 0.212357, 0.32528],
                 [0.287822, 0.383782, 0.165157, 0.268401, 0.22285, 0.312183, 0.22417, 0.335634], [0.281633, 0.378198, 0.165176, 0.269595, 0.216792, 0.305928, 0.236399, 0.346279],
                 [0.273968, 0.371402, 0.166522, 0.271901, 0.21104, 0.300006, 0.24847, 0.356691], [0.265252, 0.363836, 0.169411, 0.275449, 0.205472, 0.294323, 0.259864, 0.366392],
                 [0.255883, 0.355882, 0.173981, 0.280317, 0.199975, 0.288802, 0.270161, 0.375], [0.246192, 0.34782, 0.180269, 0.286514, 0.19447, 0.283407, 0.279069, 0.382259],
                 [0.236427, 0.339817, 0.188194, 0.293963, 0.188934, 0.278162, 0.286446, 0.388059], [0.226748, 0.331927, 0.197551, 0.302492, 0.183408, 0.273151, 0.292292, 0.392431],
                 [0.217247, 0.324119, 0.208021, 0.311837, 0.178001, 0.268519, 0.296732, 0.395525], [0.207963, 0.316317, 0.219183, 0.321654, 0.172879, 0.264456, 0.299975, 0.397573],
                 [0.198927, 0.308446, 0.230543, 0.331538, 0.168252, 0.261177, 0.302278, 0.39884], [0.190182, 0.300475, 0.241577, 0.341056, 0.164352, 0.258894, 0.30389, 0.399574],
                 [0.181815, 0.292455, 0.251764, 0.34978, 0.161409, 0.257798, 0.305012, 0.399967], [0.17397, 0.284535, 0.260632, 0.357324, 0.159632, 0.258027, 0.305766, 0.400114],
                 [0.166844, 0.276962, 0.267799, 0.363375, 0.159189, 0.259661, 0.306168, 0.400002], [0.160674, 0.270057, 0.272998, 0.367723, 0.16019, 0.262708, 0.306138, 0.399512],
                 [0.155704, 0.264178, 0.2761, 0.370273, 0.162689, 0.267106, 0.305506, 0.398443], [0.152156, 0.259666, 0.27712, 0.371053, 0.166675, 0.272733, 0.304049, 0.396548],
                 [0.150182, 0.256796, 0.276208, 0.370205, 0.172081, 0.279419, 0.301529, 0.393581], [0.149841, 0.255721, 0.273625, 0.367963, 0.178794, 0.286967, 0.297741, 0.38935],
                 [0.151069, 0.256445, 0.269716, 0.364624, 0.186663, 0.29517, 0.292553, 0.383761], [0.153679, 0.258807, 0.264868, 0.360514, 0.195514, 0.303827, 0.285939, 0.376852],
                 [0.157373, 0.26249, 0.259472, 0.355949, 0.205155, 0.312755, 0.278, 0.368806], [0.16177, 0.267057, 0.25388, 0.351203, 0.215386, 0.321795, 0.268964, 0.359945],
                 [0.166456, 0.272005, 0.248372, 0.346482, 0.226, 0.330808, 0.259171, 0.350705], [0.171034, 0.276829, 0.24314, 0.341905, 0.236787, 0.339676, 0.249038, 0.341591],
                 [0.175179, 0.281097, 0.238272, 0.337502, 0.247529, 0.348285, 0.23902, 0.333116], [0.178687, 0.284507, 0.233755, 0.333225, 0.258004, 0.356519, 0.229555, 0.325748],
                 [0.181503, 0.286938, 0.229495, 0.328964, 0.267982, 0.364254, 0.22102, 0.319845], [0.183739, 0.288467, 0.225339, 0.324576, 0.277232, 0.371344, 0.21369, 0.315613],
                 [0.185658, 0.289369, 0.221107, 0.319918, 0.285526, 0.377632, 0.207709, 0.313081], [0.187638, 0.290072, 0.216628, 0.314882, 0.292653, 0.382951, 0.203082, 0.312095],
                 [0.19012, 0.291106, 0.211771, 0.309417, 0.298427, 0.387138, 0.199682, 0.312339], [0.193544, 0.293019, 0.206471, 0.303553, 0.302707, 0.390053, 0.197278, 0.313375],
                 [0.198271, 0.296294, 0.200748, 0.297407, 0.30541, 0.391596, 0.195572, 0.314702], [0.204525, 0.301269, 0.19471, 0.291182, 0.306519, 0.391724, 0.194246, 0.315824],
                 [0.212339, 0.308073, 0.188552, 0.28515, 0.306094, 0.390468, 0.193015, 0.316309], [0.221533, 0.316586, 0.182533, 0.279624, 0.304271, 0.387935, 0.191663, 0.315855],
                 [0.231708, 0.326435, 0.176961, 0.274931, 0.30125, 0.384309, 0.190081, 0.314325], [0.242281, 0.33702, 0.172154, 0.271376, 0.297285, 0.379836, 0.188279, 0.311768],
                 [0.252536, 0.347572, 0.168415, 0.269207, 0.292658, 0.374806, 0.186391, 0.308415], [0.261701, 0.357238, 0.166, 0.268591, 0.287651, 0.369524, 0.184648, 0.304648],
                 [0.26903, 0.365175, 0.165095, 0.269593, 0.282523, 0.36428, 0.183352, 0.300953], [0.273892, 0.370651, 0.165797, 0.272173, 0.27748, 0.359317, 0.182831, 0.297859],
                 [0.275839, 0.37313, 0.168113, 0.276187, 0.272655, 0.354809, 0.183393, 0.295874], [0.274663, 0.372338, 0.171955, 0.281407, 0.268099, 0.350838, 0.185284, 0.295418],
                 [0.270421, 0.368296, 0.177156, 0.28754, 0.263772, 0.347387, 0.188652, 0.296777], [0.263429, 0.361316, 0.183486, 0.294263, 0.259559, 0.344349, 0.193526, 0.300071],
                 [0.254227, 0.351969, 0.190675, 0.301252, 0.255286, 0.34154, 0.199812, 0.305239], [0.243517, 0.34101, 0.198436, 0.30821, 0.250746, 0.338725, 0.207302, 0.312056],
                 [0.232085, 0.329294, 0.206484, 0.314895, 0.245732, 0.335652, 0.215699, 0.320159], [0.220712, 0.317677, 0.214564, 0.321134, 0.240072, 0.332091, 0.224652, 0.329097],
                 [0.210092, 0.306919, 0.222457, 0.326833, 0.233659, 0.327866, 0.233792, 0.338383], [0.20076, 0.297602, 0.229994, 0.331971, 0.226473, 0.322881, 0.242773, 0.347547],
                 [0.193043, 0.290079, 0.237056, 0.336595, 0.218598, 0.317141, 0.251303, 0.356185], [0.187043, 0.284449, 0.243577, 0.340802, 0.21022, 0.31076, 0.25916, 0.363989],
                 [0.182643, 0.280567, 0.249535, 0.344718, 0.201617, 0.303948, 0.266205, 0.370768], [0.179544, 0.278086, 0.254943, 0.348479, 0.193141, 0.296994, 0.272372, 0.376441],
                 [0.177321, 0.276526, 0.259847, 0.352214, 0.18518, 0.290238, 0.277652, 0.381022], [0.175498, 0.275349, 0.264306, 0.356025, 0.178129, 0.284034, 0.282067, 0.384591],
                 [0.173619, 0.274052, 0.268393, 0.359981, 0.172347, 0.278713, 0.285641, 0.387253], [0.171316, 0.272237, 0.272183, 0.36411, 0.168127, 0.274549, 0.288374, 0.389104],
                 [0.168362, 0.269666, 0.275744, 0.3684, 0.16567, 0.271733, 0.290224, 0.390201], [0.164699, 0.2663, 0.279136, 0.372799, 0.165065, 0.270358, 0.291099, 0.390542],
                 [0.160446, 0.262294, 0.282399, 0.377224, 0.166292, 0.270417, 0.290863, 0.390064], [0.155877, 0.257973, 0.285549, 0.381566, 0.169223, 0.271806, 0.289351, 0.388655],
                 [0.15138, 0.253782, 0.288573, 0.385693, 0.173647, 0.274351, 0.2864, 0.386175], [0.147405, 0.250218, 0.29142, 0.389454, 0.179292, 0.277832, 0.281883, 0.382496],
                 [0.144403, 0.247764, 0.293998, 0.392685, 0.18586, 0.282014, 0.27574, 0.377537], [0.142764, 0.246817, 0.296166, 0.39521, 0.193058, 0.286678, 0.268012, 0.371296],
                 [0.142776, 0.247638, 0.297742, 0.396837, 0.200624, 0.291648, 0.258858, 0.363876], [0.144585, 0.250322, 0.298503, 0.397372, 0.208351, 0.296809, 0.248561, 0.355498]]
plt.plot(pops,"*")
plt.plot(UnnatiResults)
plt.show()
# plt.plot(correlation, 'o')
# plt.show()

# plt.plot(np.sum(np.array(UnnatiData), 1))
# plt.plot(np.sum(pops, 1))
# plt.show()
